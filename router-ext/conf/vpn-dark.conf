
## Last changed: 2017-01-23 00:08:00 UTC
#This is the version of JunOS running on the device.
version 12.1X47-D15.4;
#This is the system hierarchy, where system services are configured.
system {
    #Set the host name of the router to `router-ext.localnet`
    host-name router-ext.localnet;
    authentication-order password;
    #This is the encrypted password for the root user.
    root-authentication {
        encrypted-password "$1$69YG1r9g$nwcifpgZqGt6YPT6uM5/x/"; ## SECRET-DATA
    }
    login {
        user g7 {
            full-name "group 7";
            uid 1000;
            class super-user;
            authentication {
                encrypted-password "$1$/3afQgsd$vEI/mT4BQh3K6CYagV4YQ1"; ## SECRET-DATA
            }
        }
    }
    #Enable SSH on all interfaces and access to the web management
    #interface on ge-0/0/0.0
    services {
        ssh;
        web-management {
            http {
                port 8001;
                interface ge-0/0/0.0;
            }
        }
    }
    #Where to get the licensing information?
    license {
        autoupdate {
            url https://ae1.juniper.net/junos/key_retrieval;
        }
    }
    #Get the time from an NTP server in the DK pool.
    ntp {
        server 77.243.43.213;
    }
}
#Interface configuration.
interfaces {
    ge-0/0/0 {
        unit 0 {
            family inet {
                address 10.5.0.1/8;
            }
        }
    }
    ge-0/0/1 {
        unit 0 {
            family inet {
                address 10.5.100.1/24;
            }
        }
    }
    st0 {
        unit 0 {
            family inet {
                address 10.7.200.2/30;
            }
            family inet6;
        }
    }
}
routing-options {
    static {
        route 10.5.100.0/24 next-hop 10.5.100.1;
        route 10.7.0.0/16 next-hop 10.7.200.2;
        route 10.5.0.1/24 next-hop 10.5.0.1;
        route 0.0.0.0/0 next-hop st0.0;
    }
}
protocols {
    ospf {
        area 0.0.0.0 {
            area-range 10.7.0.0/16;
            area-range 10.5.0.0/16;
            network-summary-export exportstatic;
            interface ge-0/0/0.0;
            interface ge-0/0/1.0 {
                passive;
            }
            interface st0.0;
        }
    }
}
policy-options {
    policy-statement exportstatic {
        term exportstatic {
            from protocol static;
            then accept;
        }
    }
}
security {
    ike {
        proposal phase1 {
            authentication-method pre-shared-keys;
            dh-group group2;
            authentication-algorithm md5;
            encryption-algorithm 3des-cbc;
            lifetime-seconds 86400;
        }
        policy phase1-policy {
            mode main;
            proposals phase1;
            pre-shared-key ascii-text "$9$hrscK8oaUDHmoJi.5T/9evWLxdYgJ"; ## SECRET-DATA
        }
        gateway phase1-gateway {
            ike-policy phase1-policy;
            address 10.7.0.3;
            dead-peer-detection {
                interval 20;
                threshold 5;
            }
            external-interface ge-0/0/0.0;
        }
    }
    ipsec {
        proposal phase2 {
            protocol esp;
            authentication-algorithm hmac-md5-96;
            encryption-algorithm 3des-cbc;
            lifetime-seconds 3200;
        }
        policy phase2-policy {
            perfect-forward-secrecy {
                keys group2;
            }
            proposals phase2;
        }
        vpn to-remote-SRX {
            bind-interface st0.0;
            ike {
                gateway phase1-gateway;
                ipsec-policy phase2-policy;
            }
            establish-tunnels immediately;
        }
    }
    address-book {
        global {
            address vpn-remote 10.7.0.0/16;
            address vpn-local 10.5.0.0/16;
        }
    }
    policies {
        from-zone trust to-zone trust {
            policy default-permit {
                match {
                    source-address any;
                    destination-address any;
                    application any;
                }
                then {
                    permit;
                }
            }
        }
        from-zone trust to-zone untrust {
            policy default-permit {
                match {
                    source-address any;
                    destination-address any;
                    application any;
                }
                then {
                    permit;
                }
            }
        }
        from-zone untrust to-zone trust {
            policy default-deny {
                match {
                    source-address any;
                    destination-address any;
                    application any;
                }
                then {
                    deny;
                }
            }
        }
        from-zone untrust to-zone untrust {
            policy default-permit {
                match {
                    source-address any;
                    destination-address any;
                    application any;
                }
                then {
                    permit;
                }
            }
        }
        from-zone vpn to-zone trust {
            policy default-permit {
                match {
                    source-address vpn-remote;
                    destination-address vpn-local;
                    application any;
                }
                then {
                    permit;
                }
            }
        }
        from-zone vpn to-zone untrust {
            policy default-deny {
                match {
                    source-address any;
                    destination-address any;
                    application any;
                }
                then {
                    deny;
                }
            }
        }
        from-zone trust to-zone vpn {
            policy default-permit {
                match {
                    source-address vpn-local;
                    destination-address vpn-remote;
                    application any;
                }
                then {
                    permit;
                }
            }
        }
        from-zone untrust to-zone vpn {
            policy default-deny {
                match {
                    source-address any;
                    destination-address any;
                    application any;
                }
                then {
                    deny;
                }
            }
        }
        from-zone vpn to-zone vpn {
            policy default-permit {
                match {
                    source-address [ vpn-remote vpn-local ];
                    destination-address [ vpn-remote vpn-local ];
                    application any;
                }
                then {
                    permit;
                }
            }
        }
    }
    zones {
        security-zone trust {
            tcp-rst;
            interfaces {
                ge-0/0/0.0 {
                    host-inbound-traffic {
                        system-services {
                            all;
                        }
                        protocols {
                            all;
                        }
                    }
                }
				ge-0/0/1.0 {
                    host-inbound-traffic {
                        system-services {
                            all;
                        }
                        protocols {
                            all;
                        }
                    }
                }

            }
        }
        security-zone untrust {
            tcp-rst;
        }
        security-zone vpn {
            interfaces {
                st0.0 {
                    host-inbound-traffic {
                        system-services {
                            ike;
                        }
                    }
                }
            }
        }
    }
}
